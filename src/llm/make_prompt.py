def make_prompt_chatgpt(query:str, contexts:list[str]) -> str:
    '''
    データベースから取得した関連情報を使用してクエリを作成する'''
    system_prompt = (
        'あなたは優秀なAIアシスタントです。\n'
        'ユーザーが与えた情報だけをもとに回答してください。\n'
        '誤った回答には大きなペナルティが課せられます。'
        '情報がコンテキストに含まれない場合は『わかりません』と答えてください。\n'
        '回答は、可能な限り簡潔に行ってください。\n'
        '回答には必要な情報のみを記述し、単語で答えてください。質問文の情報や計算過程は含めてはいけません。'
        'また、数値に関する質問では、指定された単位と形式を用いて回答してください。\n'
        '回答には文字数の制限が存在します。最大でも40文字以内で出力してください。\n\n'
        '回答例\n'
        '良い例：\n5%\n2450億円\n中国\n'
        '悪い例：\n'
        '売上が多いのは2018年度と2019年度どちらですか？ - 2019年度が多いです。 <-「2019年度」と回答する\n'
        '利益は何億円か。 - 344億2031万円 <- 指定された単位を用い「344億円」と回答する\n'
    )

    user_prompt = (
        '以下のコンテキストを参考に回答をしてください。\n'
        '質問:\n'
        f'{query}\n\n'
        'コンテキスト:\n'
        f'{'\n\n'.join(contexts)}'
        '\n\n要件:\n'
        '単語で回答する\n数値は指定された形式に変換する\n\n'
    )

    messages = [
        {'role': 'system', 'content': system_prompt},
        {'role': 'user', 'content': user_prompt}
    ]

    return messages

GEMINI_SYSTEM_PROMPT = (
    'あなたは優秀なAIアシスタントです。\n'
    'ユーザーが与えた情報だけをもとに回答してください。\n'
    '誤った回答には大きなペナルティが課せられます。'
    '情報がコンテキストに含まれない場合は『わかりません』と答えてください。\n'
    '回答は、可能な限り簡潔に行ってください。\n'
    '回答には必要な情報のみを記述し、単語で答えてください。質問文の情報や計算過程は含めてはいけません。'
    'また、数値に関する質問では、指定された単位と形式を用いて回答してください。\n'
    '回答には文字数の制限が存在します。最大でも40文字以内で出力してください。\n\n'
    '回答例\n'
    '良い例：\n5%\n2450億円\n中国\n'
    '悪い例：\n'
    '売上が多いのは2018年度と2019年度どちらですか？ - 2019年度が多いです。 <-「2019年度」と回答する\n'
    '利益は何億円か。 - 344億2031万円 <- 指定された単位を用い「344億円」と回答する\n'
)

def make_prompt_gemini(query:str, contexts:list[str]) -> str:
    '''
    データベースから取得した関連情報を使用してクエリを作成する'''
    prompt = (
        '以下のコンテキストを参考に回答をしてください。\n'
        '質問:\n'
        f'{query}\n\n'
        'コンテキスト:\n'
        f'{'\n\n'.join(contexts)}'
    )

    return [prompt]
